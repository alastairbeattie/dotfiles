# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:monospace 12

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango). #font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock you der screen.
#exec --no-startup-id xss-lock --transfer-sleep-lock -- slimlock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
#exec --no-startup-id nm-applet

# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +10% && $refresh_i3status
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -10% && $refresh_i3status
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle && $refresh_i3status
bindsym XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status

set $up k
set $down j
set $left h
set $right l
# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec kitty
bindsym $mod+Shift+Return exec firefox
# focus child

bindsym $mod+Shift+q kill

bindcode 232 exec gmux_backlight -10
bindcode 233 exec gmux_backlight +10

bindcode 173 exec amixer -c 0 set Master 1%-
bindcode 172 exec amixer -c 0 set Master toggle
bindcode 171 exec amixer -c 0 set Master 1%+

# start dmenu (a program launcher)
bindsym $mod+space exec dmenu_run -i
# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym Mod1+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+$left border pixel 0; focus left; border pixel 1
bindsym $mod+$down border pixel 0; focus down; border pixel 1
bindsym $mod+$up border pixel 0; focus up; border pixel 1
bindsym $mod+$right border pixel 0; focus right; border pixel 1

# move focused window
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right

# splits
bindsym $mod+Shift+d split v
bindsym $mod+d split h

# marks
bindsym $mod+m exec i3-input -F 'mark %s' -l 1 -P 'Mark: '
bindsym $mod+g exec i3-input -F '[con_mark="%s"] focus' -l 1 -P 'Goto: '

#shift-tab
bindsym $mod+Tab focus next sibling
bindsym $mod+Shift+Tab focus prev sibling

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+Shift+t layout stacking
bindsym $mod+t layout tabbed
bindsym $mod+s layout toggle split

#show marks in decorations
show_marks yes
bindsym $mod+Alt+1 mark 1
bindsym $mod+Alt+2 mark 2

bindsym $mod+Control+1 [con_mark="1"] focus
bindsym $mod+Control+2 [con_mark="2"] focus
# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+p sticky toggle
# change focus between tiling / floating windows
bindsym Mod1+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
bindsym $mod+z focus child

# move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace number $ws1
bindsym $mod+2 workspace number $ws2
bindsym $mod+3 workspace number $ws3
bindsym $mod+4 workspace number $ws4
bindsym $mod+5 workspace number $ws5
bindsym $mod+6 workspace number $ws6
bindsym $mod+7 workspace number $ws7
bindsym $mod+8 workspace number $ws8
bindsym $mod+9 workspace number $ws9
bindsym $mod+0 workspace number $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number $ws1
bindsym $mod+Shift+2 move container to workspace number $ws2
bindsym $mod+Shift+3 move container to workspace number $ws3
bindsym $mod+Shift+4 move container to workspace number $ws4
bindsym $mod+Shift+5 move container to workspace number $ws5
bindsym $mod+Shift+6 move container to workspace number $ws6
bindsym $mod+Shift+7 move container to workspace number $ws7
bindsym $mod+Shift+8 move container to workspace number $ws8
bindsym $mod+Shift+9 move container to workspace number $ws9
bindsym $mod+Shift+0 move container to workspace number $ws10

new_window 1pixel
focus_follows_mouse no
# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"
exec "while true; do if [[ $(cat /sys/class/power_supply/BAT0/capacity) -le 10 ]]; then i3-nagbar -t warning -m 'Battery under 10%'; fi; sleep 60; done;"
# no borders at window edge
hide_edge_borders both
# resize without mode
bindsym $mod+Control+h resize shrink width 1 px or 1 ppt
bindsym $mod+Control+k resize grow height 1 px or 1 ppt
bindsym $mod+Control+j resize shrink height 1 px or 1 ppt
bindsym $mod+Control+l resize grow width 1 px or 1 ppt


# resize window (you can also use the mouse for that)
mode "resize " {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym k resize grow height 10 px or 10 ppt
    bindsym j resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
    # focus the parent container
    bindsym $mod+a focus parent

    # focus the child container
    bindsym $mod+z focus child
}

bindsym $mod+r mode "resize"

# gaps
smart_gaps on
gaps inner 40
gaps outer 0
bindsym $mod+i gaps inner all plus 10
bindsym $mod+o gaps inner all minus 10
# /gaps
mode "swap" {
	# switch to workspace
	bindsym $mod+1 workspace $ws1
	bindsym $mod+2 workspace $ws2
	bindsym $mod+3 workspace $ws3
	bindsym $mod+4 workspace $ws4
	bindsym $mod+5 workspace $ws5
	bindsym $mod+6 workspace $ws6
	bindsym $mod+7 workspace $ws7
	bindsym $mod+8 workspace $ws8
	bindsym $mod+9 workspace $ws9
	bindsym $mod+0 workspace $ws10
    # focus the parent container
    bindsym $mod+a focus parent

    # focus the child container
    bindsym $mod+z focus child

	# change focus
	bindsym $mod+h focus left
	bindsym $mod+j focus down
	bindsym $mod+k focus up
	bindsym $mod+l focus right

	# change focus (without mod)
	bindsym Left focus left
	bindsym Down focus down
	bindsym Up focus up
	bindsym Right focus right

	bindsym Return swap container with mark "swapee"; unmark "swapee"; mode "default";
	bindsym Escape unmark "swapee"; mode "default";
}
bindsym $mod+Shift+s mark --add "swapee"; mode "swap"

mode "insert-hsplit" {
    # switch to workspace
    # hide_edge_borders none
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # focus the parent container
    bindsym $mod+a border pixel 0; focus parent; border pixel 5

    # focus the child container
    bindsym $mod+z border pixel 0; focus child; border pixel 5

    # change focus
    bindsym h border pixel 1; focus left; border pixel 5
    bindsym j border pixel 1; focus down; border pixel 5
    bindsym k border pixel 1; focus up; border pixel 5
    bindsym l border pixel 1; focus right; border pixel 5

    bindsym t mode "insert-tab"
    bindsym i mode "insert-vsplit"

    bindsym Return border pixel 0; split v; mark --add "target"; [con_mark="insertee"] focus; move container to mark "target"; [con_mark="insertee"] focus; unmark "target"; unmark "insertee"; mode "default";
    bindsym Escape border pixel 1;  unmark "insertee"; mode "default"
}
mode "insert-vsplit" {
    # switch to workspace
    # hide_edge_borders none
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # focus the parent container
    bindsym $mod+a border pixel 1; focus parent; border pixel 5

    # focus the child container
    bindsym $mod+z border pixel 1; focus child; border pixel 5

    # change focus
    bindsym h border pixel 1; focus left; border pixel 5
    bindsym j border pixel 1; focus down; border pixel 5
    bindsym k border pixel 1; focus up; border pixel 5
    bindsym l border pixel 1; focus right; border pixel 5

    bindsym t mode "insert-tab"
    bindsym i mode "insert-hsplit"

    bindsym Return border pixel 0; split h; mark --add "target"; [con_mark="insertee"] focus; move container to mark "target"; [con_mark="insertee"] focus; unmark "target"; unmark "insertee"; mode "default";
    bindsym Escape border pixel 1;  unmark "insertee"; mode "default"
}
mode "insert-tab" {
    # switch to workspace
    # hide_edge_borders none
    bindsym $mod+1 workspace $ws1
    bindsym $mod+2 workspace $ws2
    bindsym $mod+3 workspace $ws3
    bindsym $mod+4 workspace $ws4
    bindsym $mod+5 workspace $ws5
    bindsym $mod+6 workspace $ws6
    bindsym $mod+7 workspace $ws7
    bindsym $mod+8 workspace $ws8
    bindsym $mod+9 workspace $ws9
    bindsym $mod+0 workspace $ws10
    # focus the parent container
    bindsym $mod+a border pixel 1; focus parent; border pixel 5

    # focus the child container
    bindsym $mod+z border pixel 1; focus child; border pixel 5

    # change focus
    bindsym h border pixel 0; focus left; border pixel 5
    bindsym j border pixel 0; focus down; border pixel 5
    bindsym k border pixel 0; focus up; border pixel 5
    bindsym l border pixel 0; focus right; border pixel 5

    bindsym i mode "insert-vsplit"

    bindsym Return border pixel 0; split v; mark --add "target"; [con_mark="insertee"] focus; move container to mark "target"; [con_mark="insertee"] focus; layout tabbed; unmark "target"; unmark "insertee"; mode "default";
    bindsym Escape border pixel 1;  unmark "insertee"; mode "default"
}

bindsym $mod+Shift+i border pixel 5; mark --add "insertee"; mode "insert-hsplit";

# Printscreen function
bindsym --release $mod+p exec scrot -s -e 'mv $f /tmp/ && gimp /tmp/$f'
bindsym $mod+Ctrl+P exec scrot -e 'mv $f /tmp/ && gimp /tmp/$f'

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#        tray_output primary
#}
bar {
        i3bar_command i3bar --transparency
        status_command i3status
        tray_output primary
        mode hide
        colors {
                background #141c21b3
        }
}
